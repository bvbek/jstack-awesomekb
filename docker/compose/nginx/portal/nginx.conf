worker_processes  1;

events {
  worker_connections  1024;
}

http {

  # Extending the size of this variable since it may error otherwise
  # when using long domain names like default Amazon AWS ones
  server_names_hash_bucket_size  128;
  
  # Default Server, it will swallow any requests not matching any of the specific 
  # server below. This way, we avoid direct access to the server via 
  # direct Public IP or Cloud DNS (like an Amazon AWS public DNS name)
  server {
    listen 443 ssl default_server;
    server_name _;
    return 404;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;
  }

  
  server {
    listen 443 ssl;
    server_name     login.jstack.com;

    resolver 127.0.0.11 ipv6=off;
    set $upstream_endpoint http://inca-authelia:8080;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location / {
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Original-URI $request_uri;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_intercept_errors on;

      proxy_pass        $upstream_endpoint;

      if ($request_method !~ ^(POST)$){
        error_page 401 = /error/401;
        error_page 403 = /error/403;
        error_page 404 = /error/404;
      }
    }
  }

  server {
    listen 443 ssl; 
    server_name     awesomekb.jstack.com;

    resolver 127.0.0.11 ipv6=off;
    set $upstream_verify http://inca-authelia:8080/api/verify;
    set $upstream_endpoint http://jstack-nginx-backend;
    set $upstream_headers http://httpbin:8000/headers;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location /auth_verify {
      internal;
      proxy_set_header            Host $http_host;

      proxy_set_header            X-Original-URI $request_uri;
      proxy_set_header            X-Original-URL $scheme://$http_host$request_uri;
      proxy_set_header            X-Real-IP $remote_addr;
      proxy_set_header            X-Forwarded-Proto $scheme;
      proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_pass_request_body     off;
      proxy_set_header            Content-Length "";

      proxy_pass        $upstream_verify;
    }

    location / {
      auth_request /auth_verify;

      auth_request_set $redirect $upstream_http_redirect;
      
      auth_request_set $user $upstream_http_remote_user;
      proxy_set_header X-Forwarded-User $user;
      
      auth_request_set $groups $upstream_http_remote_groups;
      proxy_set_header Remote-Groups $groups;

      proxy_set_header Host $http_host;

      error_page 401 =302 https://login.jstack.com?rd=$redirect;
      error_page 403 = https://login.jstack.com/error/403;

      proxy_pass        $upstream_endpoint;
    }

    location /headers {
      auth_request /auth_verify;

      auth_request_set $redirect $upstream_http_redirect;

      auth_request_set $user $upstream_http_remote_user;
      proxy_set_header Custom-Forwarded-User $user;
      
      auth_request_set $groups $upstream_http_remote_groups;
      proxy_set_header Custom-Forwarded-Groups $groups;

      error_page 401 =302 https://login.jstack.com?rd=$redirect;
      error_page 403 = https://login.jstack.com/error/403;

      proxy_pass        $upstream_headers;
    }
  }

  server {
    listen 443 ssl;
    server_name     mailcatcher.jstack.com;

    resolver 127.0.0.11 ipv6=off;
    set $upstream_endpoint http://smtp:1080;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location / {
      auth_basic           â€œMailCatcher";
      auth_basic_user_file /usr/share/nginx/.htpasswd; 
      
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Original-URI $request_uri;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_intercept_errors on;

      proxy_pass        $upstream_endpoint;

      if ($request_method !~ ^(POST)$){
        error_page 401 = /error/401;
        error_page 403 = /error/403;
        error_page 404 = /error/404;
      }
    }
  }
  
  server {
    listen 443 ssl;
    server_name     ldapadmin.jstack.com;

    resolver 127.0.0.11 ipv6=off;
    set $upstream_endpoint https://jstack-ldap-admin;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location / {
      auth_basic           "LDAP Admin";
      auth_basic_user_file /usr/share/nginx/.htpasswd; 
      
      proxy_set_header  Host $http_host;
      proxy_set_header  X-Original-URI $request_uri;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_intercept_errors on;

      proxy_pass        $upstream_endpoint;

      if ($request_method !~ ^(POST)$){
        error_page 401 = /error/401;
        error_page 403 = /error/403;
        error_page 404 = /error/404;
      }
    }
  }

  server {
    listen 443 ssl; 
    server_name     mx1.mail.jstack.com mx2.mail.jstack.com;

    resolver 127.0.0.11 ipv6=off;
    set $upstream_verify http://inca-authelia:8080/api/verify;
    set $upstream_endpoint http://jstack-nginx-backend;

    ssl on;
    ssl_certificate     /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location /auth_verify {
      internal;
      proxy_set_header            Host $http_host;

      proxy_set_header            X-Original-URI $request_uri;
      proxy_set_header            X-Original-URL $scheme://$http_host$request_uri;
      proxy_set_header            X-Real-IP $remote_addr;
      proxy_set_header            X-Forwarded-Proto $scheme;
      proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_pass_request_body     off;
      proxy_set_header            Content-Length "";

      proxy_pass        $upstream_verify;
    }

    location / {
      auth_request /auth_verify;

      auth_request_set $redirect $upstream_http_redirect;

      auth_request_set $user $upstream_http_remote_user;
      proxy_set_header X-Forwarded-User $user;
      
      auth_request_set $groups $upstream_http_remote_groups;
      proxy_set_header Remote-Groups $groups;

      proxy_set_header Host $http_host;

      error_page 401 =302 https://login.jstack.com?rd=$redirect;
      error_page 403 = https://login.jstack.com/error/403;

      proxy_pass        $upstream_endpoint;
    }
  }

}

